{
  "info": {
    "version": "0.1.0",
    "title": "Atlas"
  },
  "host": "localhost:4000",
  "definitions": {
    "User": {
      "description": "User schema",
      "example": {
        "user": {
          "email": "a114437@alunos.uminho.pt",
          "id": "d18472e7-5251-4027-884f-58b8a3a6abe5",
          "inserted_at": "2025-07-15T18:10:27Z",
          "name": "Leonardo Carvalho",
          "updated_at": "2025-07-15T18:10:27Z"
        }
      },
      "properties": {
        "email": {
          "description": "User email",
          "type": "string"
        },
        "id": {
          "description": "User ID",
          "type": "integer"
        },
        "inserted_at": {
          "description": "Creation timestamp",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "User name",
          "type": "string"
        },
        "type": {
          "description": "User type",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "type",
        "updated_at",
        "email",
        "inserted_at",
        "id"
      ],
      "title": "User",
      "type": "object"
    },
    "UserSession": {
      "description": "User session schema",
      "properties": {
        "first_seen": {
          "description": "First seen timestamp",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "Session ID",
          "type": "integer"
        },
        "ip": {
          "description": "IP address of the session",
          "type": "string"
        },
        "user_agent": {
          "description": "User agent string",
          "type": "string"
        },
        "user_browser": {
          "description": "Browser of the user agent",
          "type": "string"
        },
        "user_os": {
          "description": "Operating system of the user agent",
          "type": "string"
        }
      },
      "required": [
        "first_seen",
        "user_os",
        "user_browser",
        "user_agent",
        "ip",
        "id"
      ],
      "title": "User Session",
      "type": "object"
    },
    "Job": {
      "description": "A job in the system",
      "properties": {
        "attempted_at": {
          "description": "Timestamp when the job was attempted",
          "format": "date-time",
          "type": "string"
        },
        "completed_at": {
          "description": "Timestamp when the job was completed",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "ID of the job",
          "type": "integer"
        },
        "inserted_at": {
          "description": "Timestamp when the job was created",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "description": "Status of the job",
          "type": "string"
        },
        "type": {
          "description": "Type of the job",
          "type": "string"
        },
        "user_id": {
          "description": "ID of the user who created the job",
          "type": "string"
        }
      },
      "required": [
        "completed_at",
        "attempted_at",
        "inserted_at",
        "user_id",
        "state",
        "type",
        "id"
      ],
      "title": "Job",
      "type": "object"
    },
    "SignInResponse": {
      "description": "Response schema for successful sign in",
      "example": {
        "access_token": "xXxXxXxXxXxX",
        "session_id": "e1387cae-ac1d-4aeb-8e13-ff1b3dd15ca4"
      },
      "properties": {
        "access_token": {
          "description": "Access token",
          "type": "string"
        },
        "session_id": {
          "description": "User session ID",
          "type": "integer"
        }
      },
      "required": [
        "access_token",
        "session_id"
      ],
      "title": "SignInResponse",
      "type": "object"
    },
    "UnauthorizedResponse": {
      "description": "Unauthorized response schema",
      "properties": {
        "error": {
          "description": "Unauthorized error message",
          "type": "string"
        }
      },
      "required": [
        "error"
      ],
      "title": "UnauthorizedResponse",
      "type": "object"
    },
    "ErrorResponse": {
      "description": "Error response format",
      "properties": {
        "message": {
          "description": "Error message",
          "example": "User not found",
          "type": "string"
        },
        "status": {
          "description": "Response status",
          "example": "error",
          "type": "string"
        }
      },
      "required": [
        "status",
        "message"
      ],
      "title": "Error Response",
      "type": "object"
    },
    "SuccessfulRefreshResponse": {
      "description": "Response schema for successful token refresh",
      "example": {
        "access_token": "xXxXxXxXxXxX"
      },
      "properties": {
        "access_token": {
          "description": "New access token",
          "type": "string"
        }
      },
      "required": [
        "access_token"
      ],
      "title": "SuccessfulRefreshResponse",
      "type": "object"
    },
    "SignOutResponse": {
      "description": "Response schema for successful sign out",
      "example": {
        "message": "Signed out successfully"
      },
      "properties": {
        "message": {
          "description": "Message indicating successful sign out",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "SignOutResponse",
      "type": "object"
    },
    "UserSessionsResponse": {
      "description": "Response schema for a list of user sessions",
      "example": {
        "sessions": [
          {
            "first_seen": "2025-07-15T20:13:41Z",
            "id": "8fd2bef3-f1eb-4bf2-aade-f3ae80e0563d",
            "ip": "127.0.0.1",
            "user_agent": "Mozilla/5.0 (X11; Linux x86_64; rv:139.0) Gecko/20100101 Firefox/139.0",
            "user_browser": "Firefox",
            "user_os": "Linux"
          }
        ]
      },
      "properties": {
        "sessions": {
          "description": "List of user sessions",
          "items": {
            "$ref": "#/definitions/UserSession"
          },
          "type": "array"
        }
      },
      "required": [
        "sessions"
      ],
      "title": "UserSessionsResponse",
      "type": "object"
    },
    "NoContentResponse": {
      "description": "Response schema for no content",
      "example": {},
      "properties": {
        "message": {
          "description": "Message indicating no content",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "NoContentResponse",
      "type": "object"
    },
    "ResetPasswordResponse": {
      "description": "Response schema for successful password reset",
      "example": {
        "message": "Password reset successfully"
      },
      "properties": {
        "message": {
          "description": "Message indicating successful password reset",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "ResetPasswordResponse",
      "type": "object"
    },
    "SuccessfulImport": {
      "description": "Response for a successful import",
      "properties": {
        "job_id": {
          "description": "ID of the import job",
          "type": "string"
        },
        "message": {
          "description": "Status message",
          "type": "string"
        }
      },
      "required": [
        "message",
        "job_id"
      ],
      "title": "SuccessfulImport",
      "type": "object"
    },
    "JobsResponse": {
      "description": "Response containing a list of jobs",
      "properties": {
        "jobs": {
          "description": "List of jobs",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "type": "array"
        }
      },
      "title": "JobsResponse",
      "type": "object"
    },
    "JobResponse": {
      "description": "Response containing a single job",
      "properties": {
        "job": {
          "$ref": "#/definitions/Job",
          "description": "Details of the job"
        }
      },
      "title": "JobResponse",
      "type": "object"
    },
    "AvatarUploadSuccess": {
      "description": "Successful avatar upload response",
      "properties": {
        "data": {
          "$ref": "#/definitions/AvatarData"
        },
        "message": {
          "description": "Success message",
          "example": "Avatar uploaded successfully",
          "type": "string"
        },
        "status": {
          "description": "Response status",
          "example": "success",
          "type": "string"
        }
      },
      "required": [
        "status",
        "message",
        "data"
      ],
      "title": "Avatar Upload Success Response",
      "type": "object"
    },
    "AvatarData": {
      "description": "Avatar upload data",
      "properties": {
        "avatar_url": {
          "description": "URL of the uploaded avatar",
          "example": "/this/is/an/xXxXxXxX-xxxx-xxxx-xxxx-xxxxxxxxxxxx/example.jpg",
          "type": "string"
        },
        "user_id": {
          "description": "User UUID",
          "example": "xXxXxXxX-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "type": "string"
        }
      },
      "required": [
        "avatar_url",
        "user_id"
      ],
      "title": "Avatar Data",
      "type": "object"
    },
    "AvatarDeleteSuccess": {
      "description": "Successful avatar deletion response",
      "properties": {
        "data": {
          "$ref": "#/definitions/DeleteData"
        },
        "message": {
          "description": "Success message",
          "example": "Avatar deleted successfully",
          "type": "string"
        },
        "status": {
          "description": "Response status",
          "example": "success",
          "type": "string"
        }
      },
      "required": [
        "status",
        "message",
        "data"
      ],
      "title": "Successful Avatar Deletion",
      "type": "object"
    },
    "DeleteData": {
      "description": "Avatar deletion data",
      "properties": {
        "user_id": {
          "description": "User UUID",
          "example": "xXxXxXxX-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "type": "string"
        }
      },
      "required": [
        "user_id"
      ],
      "title": "Delete Data",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "paths": {
    "/v1/auth/forgot_password": {
      "post": {
        "description": "Sends password reset instructions to the user via email.",
        "operationId": "forgot_password",
        "parameters": [
          {
            "description": "User email",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "$ref": "#/definitions/NoContentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        },
        "summary": "Request password reset",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/auth/me": {
      "get": {
        "description": "Returns the user in the current session.",
        "operationId": "me",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User returned succesfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User in the current session",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "description": "Refresh access token with a refresh token cookie.",
        "operationId": "refresh_token",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful refresh",
            "schema": {
              "$ref": "#/definitions/SuccessfulRefreshResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/auth/reset_password": {
      "post": {
        "description": "Sends a request to reset user's password.",
        "operationId": "reset_password",
        "parameters": [
          {
            "description": "Access token",
            "in": "query",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "description": "New password",
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          },
          {
            "description": "New password confirmation",
            "in": "query",
            "name": "password_confirmation",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Password succesfully reset",
            "schema": {
              "$ref": "#/definitions/ResetPasswordResponse"
            }
          },
          "404": {
            "description": "Invalid or expired reset token",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Reset password",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/auth/sessions": {
      "get": {
        "description": "Returns all the user sessions.",
        "operationId": "sessions",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sessions succesfully returned",
            "schema": {
              "$ref": "#/definitions/UserSessionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "User sessions",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/auth/sign_in": {
      "post": {
        "description": "Sign in a user. Returns an access token.",
        "operationId": "sign_in",
        "parameters": [
          {
            "description": "User email",
            "in": "query",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "description": "User password",
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful sign in",
            "schema": {
              "$ref": "#/definitions/SignInResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Failed to create user session",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "summary": "Sign in a user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/auth/sign_out": {
      "post": {
        "description": "Signs out the user.",
        "operationId": "sign_out",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content - Signed out successfully",
            "schema": {
              "$ref": "#/definitions/SignOutResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResponse"
            }
          },
          "500": {
            "description": "Failed to sign out",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Sign out",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/v1/import/students_by_courses": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Uploads an Excel file to import students by courses.",
        "operationId": "AtlasWeb.ImportController.students_by_courses",
        "parameters": [
          {
            "description": "Excel file containing students and courses",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Import job queued successfully.",
            "schema": {
              "$ref": "#/definitions/SuccessfulImport"
            }
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Import students by courses",
        "tags": [
          "Import"
        ]
      }
    },
    "/v1/jobs": {
      "get": {
        "description": "Returns a list of all jobs in the system.",
        "operationId": "AtlasWeb.JobController.index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Jobs successfully retrieved",
            "schema": {
              "$ref": "#/definitions/JobsResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List all jobs",
        "tags": [
          "Job"
        ]
      }
    },
    "/v1/jobs/{id}": {
      "get": {
        "description": "Returns details of a specific job.",
        "operationId": "AtlasWeb.JobController.show",
        "parameters": [
          {
            "description": "ID of the job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Job successfully retrieved",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "404": {
            "description": "Job not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get a job by ID",
        "tags": [
          "Job"
        ]
      }
    },
    "/v1/users/{id}/avatar": {
      "delete": {
        "description": "Delete the avatar image for a specific user",
        "operationId": "AtlasWeb.UserController.delete_avatar",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvatarDeleteSuccess"
            }
          },
          "422": {
            "description": "Deletion failed",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete user avatar",
        "tags": [
          "Uploaders"
        ]
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload an avatar image for a specific user",
        "operationId": "AtlasWeb.UserController.upload_avatar",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Avatar image file",
            "in": "formData",
            "name": "avatar",
            "required": true,
            "type": "file"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvatarUploadSuccess"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Upload user avatar",
        "tags": [
          "Uploaders"
        ]
      }
    }
  },
  "swagger": "2.0"
}